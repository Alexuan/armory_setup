{
    "_description": "Some Dataset BadDet",
    "adhoc": {
        "compute_fairness_metrics": false,
        "defense_categorical_labels": false,
        "experiment_id": 0,
        "explanatory_model": null,
        "fraction_poisoned": 0.5,
        "poison_dataset": true,
        "source_class": 2,
        "split_id": 0,
        "target_class": 0,
        "train_epochs": 50,
        "use_poison_filtering_defense": false
    },
    "attack": {
        "knowledge": "black",
        "kwargs": {
            "attack_variant": "BadDetRegionalMisclassificationAttack",
            "backdoor_kwargs": {
                "backdoor_path": "htbd.png",
                "blend": 0.8,
                "channels_first": false,
                "mode": "RGB",
                "poison_type": "image",
                "random": false,
                "size": [
                    4,
                    4
                ],
                "x_shift": 0,
                "y_shift": 0
            }
        },
        "module": "armory.art_experimental.attacks.poison_loader_obj_det",
        "name": "poison_loader_obj_det"
    },
    "dataset": {
        "batch_size": 32,
        "eval_split": "validation",
        "framework": "numpy",
        "module": "armory.data.datasets",
        "name": "minicoco",
        "train_split": "train"
    },
    "defense": null,
    "metric": null,
    "model": {
        "fit": true,
        "fit_kwargs": {},
        "model_kwargs": {},
        "module": "armory.baseline_models.pytorch.yolov3",
        "name": "get_art_model",
        "weights_file": "yolov3.weights",
        "wrapper_kwargs": {}
    },
    "scenario": {
        "kwargs": {},
        "module": "armory.scenarios.poisoning_obj_det",
        "name": "ObjectDetectionPoisoningScenario"
    },
    "sysconfig": {
        "docker_image": "twosixarmory/armory",
        "external_github_repo": null,
        "gpus": "all",
        "output_dir": null,
        "output_filename": null,
        "set_pythonhashseed": true,
        "use_gpu": false
    }
}
